export function printJHipsterLogo(): void;
export function createProgram({ executableName, executableVersion }?: {
    executableName?: string | undefined;
    executableVersion: any;
}): JHipsterCommand;
export function buildCommands({ program, commands, envBuilder, env, loadCommand, defaultCommand, entrypointGenerator, printLogo, printBlueprintLogo, createEnvBuilder, }: {
    program: any;
    commands?: {} | undefined;
    envBuilder: any;
    env: any;
    loadCommand: any;
    defaultCommand?: string | undefined;
    entrypointGenerator: any;
    printLogo?: (() => void) | undefined;
    printBlueprintLogo?: (() => void) | undefined;
    createEnvBuilder: any;
}): Promise<void>;
export function buildJHipster({ executableName, executableVersion, program, blueprints, lookups, createEnvBuilder, envBuilder, commands, printLogo, printBlueprintLogo, devBlueprintPath, env, loadCommand, defaultCommand, entrypointGenerator, }?: {
    executableName: any;
    executableVersion: any;
    program?: JHipsterCommand | undefined;
    blueprints: any;
    lookups: any;
    createEnvBuilder: any;
    envBuilder: any;
    commands: any;
    printLogo: any;
    printBlueprintLogo: any;
    devBlueprintPath: any;
    env: any;
    loadCommand?: ((key: any) => Promise<any>) | undefined;
    defaultCommand: any;
    entrypointGenerator: any;
}): Promise<JHipsterCommand>;
export function runJHipster(args?: {}): Promise<JHipsterCommand>;
export { done };
import JHipsterCommand from './jhipster-command.mjs';
import { done } from './utils.mjs';
