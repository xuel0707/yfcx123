/**
 * Copyright 2013-2024 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { TokenType } from 'chevrotain';
import { CstParser } from 'chevrotain';
export default class JDLParser extends CstParser {
    private tokens;
    constructor(tokens: Record<string, TokenType>);
    parse(): void;
    prog(): void;
    constantDeclaration(): any;
    entityDeclaration(): any;
    annotationDeclaration(): any;
    entityTableNameDeclaration(): any;
    entityBody(): any;
    fieldDeclaration(): any;
    type(): any;
    validation(): any;
    minMaxValidation(): any;
    pattern(): any;
    relationDeclaration(): any;
    relationshipType(): any;
    relationshipBody(): any;
    relationshipSide(): any;
    relationshipOptions(): any;
    relationshipOption(): any;
    enumDeclaration(): any;
    enumPropList(): any;
    enumProp(): any;
    entityList(): any;
    commonEntityList(): any;
    exclusion(): any;
    useOptionDeclaration(): any;
    unaryOptionDeclaration(): any;
    binaryOptionDeclaration(): any;
    filterDef(): any;
    comment(): any;
    deploymentDeclaration(): any;
    deploymentConfigDeclaration(): any;
    deploymentConfigValue(): any;
    applicationDeclaration(): any;
    applicationSubDeclaration(): any;
    applicationSubNamespaceConfig(): any;
    applicationNamespaceConfigDeclaration(): any;
    namespaceConfigValue(): any;
    applicationSubConfig(): any;
    applicationConfigDeclaration(): any;
    configValue(): any;
    qualifiedName(): any;
    list(): any;
    quotedList(): any;
    applicationSubEntities(): any;
}
