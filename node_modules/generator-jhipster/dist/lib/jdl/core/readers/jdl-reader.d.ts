/**
 * Copyright 2013-2024 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { JDLRuntime } from '../types/runtime.js';
/**
 * Parses the given files and returns the resulting intermediate object.
 * If one file is passed, the file will be read and its parsed content returned.
 * If more than one are passed, they will be assembled and only parsed once.
 * @param files the files to parse.
 * @returns {Object} the intermediate object.
 */
export declare function parseFromFiles(files: string[], runtime: JDLRuntime): any;
/**
 * Parses the given content and returns the resulting intermediate object.
 * @param content the JDL content to parse.
 * @returns {Object} the intermediate object.
 */
export declare function parseFromContent(content: string, runtime: JDLRuntime): any;
export declare function getCstFromContent(content: string, runtime: JDLRuntime): any;
/**
 * Checks whether the given file is a JDL file, only from the extension.
 * Doesn't return anything, but fails if the extension doesn't match.
 * @param file the file to check.
 */
export declare function checkFileIsJDLFile(file: string): void;
