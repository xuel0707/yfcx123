declare function getOptionName(optionValue: any): string | undefined;
declare function forEach(passedFunction: any): void;
declare function exists(passedOption: any, passedValue?: any): boolean;
declare const _default: {
    Options: {
        DTO: string;
        SERVICE: string;
        PAGINATION: string;
        MICROSERVICE: string;
        SEARCH: string;
        ANGULAR_SUFFIX: string;
        CLIENT_ROOT_FOLDER: string;
    };
    DefaultValues: {
        [x: string]: any;
    };
    OptionValues: {
        mapstruct: string;
        serviceClass: string;
        serviceImpl: string;
        pagination: string;
        'infinite-scroll': string;
        elasticsearch: string;
        couchbase: string;
    };
    Values: {
        dto: {
            MAPSTRUCT: string;
            NO: string;
        };
        service: {
            SERVICE_CLASS: string;
            SERVICE_IMPL: string;
            NO: string;
        };
        pagination: {
            PAGINATION: string;
            'INFINITE-SCROLL': string;
            NO: string;
        };
        search: {
            ELASTICSEARCH: string;
            COUCHBASE: string;
            NO: string;
        };
    };
    exists: typeof exists;
    forEach: typeof forEach;
    getOptionName: typeof getOptionName;
};
export default _default;
