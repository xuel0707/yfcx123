import type { JDLApplicationOptionType, JDLApplicationOptionTypeValue, JDLApplicationOptionValue } from '../types/parsing.js';
export default class JDLApplicationDefinition {
    optionValues: Record<string, JDLApplicationOptionValue>;
    optionTypes: Record<string, JDLApplicationOptionType>;
    quotedOptionNames: string[];
    constructor({ optionValues, optionTypes, quotedOptionNames }: {
        optionValues: any;
        optionTypes: any;
        quotedOptionNames: any;
    });
    /**
     * Returns the option's type, one of string, boolean, list or integer.
     * @param {String} optionName - the option's name.
     * @returns {string} the option's type.
     */
    getTypeForOption(optionName: string): JDLApplicationOptionTypeValue;
    /**
     * Checks whether the option value exists for the passed option name.
     * @param {String} name - the option name.
     * @param {String|Boolean|Number} value - the option value.
     * @returns {Boolean} whether the option value exists for the name.
     */
    doesOptionValueExist(name: string, value: string | string[]): boolean;
    /**
     * Checks whether the option's exists.
     * @param {String} optionName - the option's name.
     * @returns {Boolean} the option's existence.
     */
    doesOptionExist(optionName: string): boolean;
    /**
     * Checks whether the corresponding option has a value that should be quoted in the JDL, like the jhipsterVersion
     * attribute.
     * @param {String} optionName - the name of the option to check.
     * @return {boolean} whether it should be quoted in the JDL.
     */
    shouldTheValueBeQuoted(optionName: string): boolean;
}
