export default class JDLEnums {
    enums;
    constructor() {
        this.enums = new Map();
    }
    add(jdlEnum) {
        if (!jdlEnum) {
            throw new Error("Can't add a nil JDL enum to the JDL enums.");
        }
        this.enums.set(jdlEnum.name, jdlEnum);
    }
    get(enumName) {
        return this.enums.get(enumName);
    }
    has(enumName) {
        return this.enums.has(enumName);
    }
    size() {
        return this.enums.size;
    }
    forEach(passedFunction) {
        if (!passedFunction) {
            return;
        }
        this.enums.forEach(jdlEnum => {
            passedFunction(jdlEnum);
        });
    }
    toString() {
        let string = '';
        this.enums.forEach(jdlEnum => {
            string += `${jdlEnum.toString()}\n`;
        });
        return string;
    }
}
