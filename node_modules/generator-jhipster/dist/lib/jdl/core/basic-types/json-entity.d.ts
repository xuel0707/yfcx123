/**
 * Copyright 2013-2024 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The JSONEntity class represents a read-to-be exported to JSON entity.
 */
declare class JSONEntity {
    annotations: Record<string, boolean | string | number | undefined>;
    [x: string]: any;
    /**
     * Creates a new JSONEntity instance.
     * @param args the entity configuration, keys:
     *        - entityName, the entity name (mandatory)
     *        - fields, a field iterable
     *        - relationships, a relationship iterable
     *        - documentation,
     *        - entityTableName, defaults to the snake-cased entity name,
     *        - dto, defaults to 'no',
     *        - pagination, defaults to 'no',
     *        - readOnly, defaults to false,
     *        - embedded, defaults to false,
     *        - service, defaults to 'no',
     *        - jpaMetamodelFiltering, defaults to false,
     *        - fluentMethods, defaults to true,
     *        - clientRootFolder
     */
    constructor(args: Partial<JSONEntity>);
    addFields(fields: any): void;
    addField(field: any): void;
    addRelationships(relationships: any): void;
    addRelationship(relationship: any): void;
    setOptions(options?: {}): void;
    setAnnotations(annotations?: {}): void;
}
export default JSONEntity;
