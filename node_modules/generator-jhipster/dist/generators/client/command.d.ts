declare const command: {
    readonly options: {};
    readonly configs: {
        readonly clientFramework: {
            readonly description: "Provide client framework for the application";
            readonly cli: {
                readonly type: StringConstructor;
            };
            readonly prompt: (generator: any) => {
                type: "list";
                message: () => string;
            };
            readonly choices: readonly [{
                readonly value: "angular";
                readonly name: "Angular";
            }, {
                readonly value: "react";
                readonly name: "React";
            }, {
                readonly value: "vue";
                readonly name: "Vue";
            }, {
                readonly value: "no";
                readonly name: "No client";
            }];
            readonly scope: "storage";
        };
        readonly microfrontend: {
            readonly description: "Enable microfrontend support";
            readonly cli: {
                readonly type: BooleanConstructor;
            };
            readonly prompt: ({ jhipsterConfigWithDefaults: config }: any) => {
                type: "confirm";
                when: (answers: any) => boolean;
                message: string;
                default: boolean;
            };
            readonly scope: "storage";
        };
        readonly microfrontends: {
            readonly description: "Microfrontends to load";
            readonly cli: {
                readonly type: (val: string) => any;
            };
            readonly prompt: ({ jhipsterConfigWithDefaults: config }: any) => {
                when: (answers: any) => boolean;
                type: "input";
                message: string;
                filter: (answer: any) => any;
                transformer: (answer: any) => any;
            };
            readonly scope: "storage";
        };
        readonly clientTestFrameworks: {
            readonly description: "Client test frameworks";
            readonly cli: {
                readonly type: ArrayConstructor;
                readonly hide: true;
            };
            readonly prompt: ({ jhipsterConfigWithDefaults: config }: any) => {
                when: (answers: any) => boolean;
                type: "checkbox";
                message: string;
                default: () => "cypress"[];
            };
            readonly choices: readonly [{
                readonly name: "Cypress";
                readonly value: "cypress";
            }];
            readonly scope: "storage";
        };
        readonly withAdminUi: {
            readonly description: "Generate administrative user interface";
            readonly cli: {
                readonly type: BooleanConstructor;
            };
            readonly prompt: ({ jhipsterConfigWithDefaults: config }: any) => {
                type: "confirm";
                when: (answers: any) => boolean;
                message: string;
            };
            readonly scope: "storage";
        };
        readonly clientRootDir: {
            readonly description: "Client root";
            readonly cli: {
                readonly type: StringConstructor;
            };
            readonly scope: "storage";
        };
    };
    readonly import: readonly ["common"];
};
export default command;
