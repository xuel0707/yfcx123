export declare const GENERATE_SNAPSHOTS = "generateSnapshots";
export declare const LINK_JHIPSTER_DEPENDENCY = "linkJhipsterDependency";
export declare const GENERATORS = "generators";
export declare const SUB_GENERATORS = "subGenerators";
export declare const ADDITIONAL_SUB_GENERATORS = "additionalSubGenerators";
export declare const DYNAMIC = "dynamic";
export declare const JS = "js";
export declare const LOCAL_BLUEPRINT_OPTION = "localBlueprint";
export declare const CLI_OPTION = "cli";
export declare const SBS = "sbs";
export declare const COMMAND = "command";
export declare const PRIORITIES = "priorities";
export declare const ALL_GENERATORS = "allGenerators";
export declare const ALL_PRIORITIES = "allPriorities";
export declare const WRITTEN = "written";
/**
 * Config that needs to be written to config
 */
export declare const requiredConfig: () => {};
/**
 * Default config that will be used for templates
 */
export declare const defaultConfig: ({ config }?: {
    config?: {} | undefined;
}) => {
    dynamic: boolean;
    js: boolean;
    localBlueprint: boolean;
    cli: boolean;
    subGenerators: never[];
    additionalSubGenerators: string;
};
export declare const defaultSubGeneratorConfig: () => {
    sbs: boolean;
    command: boolean;
    written: boolean;
    priorities: never[];
};
export declare const allGeneratorsConfig: () => {
    subGenerators: ("base" | "upgrade" | "info" | "angular" | "react" | "vue" | "maven" | "gradle" | "cypress" | "cucumber" | "gatling" | "spring-websocket" | "languages" | "bootstrap" | "bootstrap-application-base" | "common" | "server" | "client" | "git" | "workspaces" | "spring-boot" | "liquibase" | "java" | "spring-data-relational" | "app" | "base-application" | "base-core" | "base-entity-changes" | "base-workspaces" | "bootstrap-application" | "bootstrap-application-client" | "bootstrap-application-server" | "bootstrap-workspaces" | "ci-cd" | "docker" | "docker-compose" | "entities" | "entity" | "export-jdl" | "feign-client" | "generate-blueprint" | "heroku" | "init" | "jdl" | "kubernetes" | "kubernetes-helm" | "kubernetes-knative" | "project-name" | "spring-cache" | "spring-cloud-stream" | "spring-data-cassandra" | "spring-data-couchbase" | "spring-data-elasticsearch" | "spring-data-mongodb" | "spring-data-neo4j")[];
    additionalSubGenerators: string;
    dynamic: boolean;
    js: boolean;
    generators: {
        [k: string]: {
            sbs: boolean;
            command: boolean;
            priorities: string[];
        };
    };
};
export declare const prompts: () => ({
    type: string;
    name: string;
    message: string;
    default: boolean;
    choices?: undefined;
    pageSize?: undefined;
    loop?: undefined;
    validate?: undefined;
    when?: undefined;
} | {
    type: string;
    name: string;
    message: string;
    choices: ("base" | "upgrade" | "info" | "angular" | "react" | "vue" | "maven" | "gradle" | "cypress" | "cucumber" | "gatling" | "spring-websocket" | "languages" | "bootstrap" | "bootstrap-application-base" | "common" | "server" | "client" | "git" | "workspaces" | "spring-boot" | "liquibase" | "java" | "spring-data-relational" | "app" | "base-application" | "base-core" | "base-entity-changes" | "base-workspaces" | "bootstrap-application" | "bootstrap-application-client" | "bootstrap-application-server" | "bootstrap-workspaces" | "ci-cd" | "docker" | "docker-compose" | "entities" | "entity" | "export-jdl" | "feign-client" | "generate-blueprint" | "heroku" | "init" | "jdl" | "kubernetes" | "kubernetes-helm" | "kubernetes-knative" | "project-name" | "spring-cache" | "spring-cloud-stream" | "spring-data-cassandra" | "spring-data-couchbase" | "spring-data-elasticsearch" | "spring-data-mongodb" | "spring-data-neo4j")[];
    pageSize: number;
    loop: boolean;
    default?: undefined;
    validate?: undefined;
    when?: undefined;
} | {
    type: string;
    name: string;
    message: string;
    validate: (input: any) => true | "Please provide valid generator names";
    default?: undefined;
    choices?: undefined;
    pageSize?: undefined;
    loop?: undefined;
    when?: undefined;
} | {
    when: (answers: any) => boolean;
    type: string;
    name: string;
    message: string;
    default: boolean;
    choices?: undefined;
    pageSize?: undefined;
    loop?: undefined;
    validate?: undefined;
})[];
export declare const subGeneratorPrompts: ({ subGenerator, additionalSubGenerator, localBlueprint }: {
    subGenerator: any;
    additionalSubGenerator: any;
    localBlueprint: any;
}) => ({
    type: string;
    name: string;
    when: boolean;
    message: string;
    default: boolean;
    choices?: undefined;
    pageSize?: undefined;
    loop?: undefined;
} | {
    type: string;
    name: string;
    message: string;
    choices: string[];
    pageSize: number;
    default: (answers: any) => string[];
    loop: boolean;
    when?: undefined;
})[];
