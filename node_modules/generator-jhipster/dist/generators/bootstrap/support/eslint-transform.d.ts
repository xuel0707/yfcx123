import { Piscina } from 'piscina';
import type BaseGenerator from '../../base-core/index.js';
type PoolOptions = Exclude<ConstructorParameters<typeof Piscina>[0], undefined>;
type ESLintWorkerOptions = {
    cwd?: string;
    extensions: string;
    recreateEslint?: boolean;
};
export declare class ESLintPool extends Piscina {
    constructor(options?: PoolOptions);
    apply(data: ESLintWorkerOptions & {
        filePath: string;
        fileContents: string;
    }): Promise<{
        result: string;
        error: string;
    }>;
}
export declare const createESLintTransform: (this: BaseGenerator | void, transformOptions?: {
    ignoreErrors?: boolean;
    poolOptions?: PoolOptions;
} & Partial<ESLintWorkerOptions>) => import("p-transform").DuplexWithDebug;
export {};
