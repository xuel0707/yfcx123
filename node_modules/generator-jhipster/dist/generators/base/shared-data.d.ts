import type { MemFsEditor } from 'mem-fs-editor';
import { type BaseApplication } from '../base-application/types.js';
import { type Control } from './types.js';
export default class SharedData<ApplicationType extends BaseApplication = BaseApplication> {
    _storage: any;
    _editor: MemFsEditor;
    _log: any;
    _logCwd: string;
    constructor(storage: any, { memFs, destinationPath, log, logCwd }: {
        memFs: any;
        destinationPath: any;
        log: any;
        logCwd: any;
    }, initialControl?: Partial<Control>);
    getSource(): any;
    getControl(): Control;
    getApplication(): ApplicationType;
    setEntity(entityName: string, entity: any): void;
    hasEntity(entityName: any): boolean;
    getEntity(entityName: any): any;
    getEntities(entityNames?: string[]): {
        entityName: string;
        entity: any;
    }[];
    getEntitiesMap(): any;
}
