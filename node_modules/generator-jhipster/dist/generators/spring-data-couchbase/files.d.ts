export declare const couchbaseFiles: {
    serverJavaConfig: ({
        path: string;
        renameTo: (data: any, filePath: string) => string;
        templates: string[];
        condition?: undefined;
    } | {
        condition: (data: any) => any;
        path: string;
        renameTo: (data: any, filePath: string) => string;
        templates: string[];
    })[];
    serverResource: {
        condition: (data: any) => any;
        path: string;
        templates: string[];
    }[];
    serverTestFw: {
        path: string;
        renameTo: (data: any, filePath: string) => string;
        templates: string[];
    }[];
};
export declare const cleanupCouchbaseFilesTask: (this: import("../index.js").GeneratorBaseCore, params: import("../../lib/types/application/tasks.js").WritingTaskParam<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>, import("../../lib/types/application/application.js").ApplicationType<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>>>) => void;
declare const _default: (this: import("../index.js").GeneratorBaseCore, params: import("../../lib/types/application/tasks.js").WritingTaskParam<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>, import("../../lib/types/application/application.js").ApplicationType<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>>>) => void;
export default _default;
