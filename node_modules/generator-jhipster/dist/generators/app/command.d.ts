declare const command: {
    readonly options: {
        readonly defaults: {
            readonly description: "Execute jhipster with default config";
            readonly type: BooleanConstructor;
            readonly scope: "none";
        };
        readonly skipClient: {
            readonly description: "Skip the client-side application generation";
            readonly type: BooleanConstructor;
            readonly scope: "storage";
        };
        readonly skipServer: {
            readonly description: "Skip the server-side application generation";
            readonly type: BooleanConstructor;
            readonly scope: "storage";
        };
        readonly jhiPrefix: {
            readonly description: "Add prefix before services, controllers and states name";
            readonly type: StringConstructor;
            readonly scope: "storage";
        };
        readonly entitySuffix: {
            readonly description: "Add suffix after entities name";
            readonly type: StringConstructor;
            readonly scope: "storage";
        };
        readonly dtoSuffix: {
            readonly description: "Add suffix after dtos name";
            readonly type: StringConstructor;
            readonly scope: "storage";
        };
        readonly blueprint: {
            readonly description: "DEPRECATED: Specify a generator blueprint to use for the sub generators";
            readonly type: ArrayConstructor;
            readonly scope: "none";
        };
        readonly blueprints: {
            readonly description: "A comma separated list of one or more generator blueprints to use for the sub generators, e.g. --blueprints kotlin,vuejs";
            readonly type: StringConstructor;
            readonly scope: "none";
        };
        readonly ignoreErrors: {
            readonly description: "Don't fail on prettier errors.";
            readonly type: BooleanConstructor;
            readonly scope: "none";
        };
        readonly pkType: {
            readonly description: "Default primary key type (beta)";
            readonly type: StringConstructor;
            readonly scope: "storage";
        };
        readonly clientPackageManager: {
            readonly description: "Force an unsupported client package manager";
            readonly type: StringConstructor;
            readonly scope: "storage";
        };
        readonly testFrameworks: {
            readonly description: "Test frameworks to be generated";
            readonly type: ArrayConstructor;
            readonly scope: "none";
        };
    };
    readonly import: readonly ["bootstrap", "bootstrap-application-base", "common", "server", "client", "git", "cypress", "languages"];
};
export default command;
