/**
 * Copyright 2013-2024 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type CoreGenerator from '../../base-core/index.js';
import XmlStorage from '../internal/xml-store.js';
import type { MavenAnnotationProcessor, MavenDependency, MavenDistributionManagement, MavenPlugin, MavenProfile, MavenProperty, MavenRepository } from '../types.js';
export default class PomStorage extends XmlStorage {
    constructor({ saveFile, loadFile, sortFile }: {
        saveFile: (string: any) => void;
        loadFile: () => string;
        sortFile?: boolean;
    });
    addProperty({ inProfile, property, value }: MavenProperty): void;
    addDependency({ inProfile, ...dependency }: MavenDependency): void;
    addDependencyManagement({ inProfile, ...dependency }: MavenDependency): void;
    addDistributionManagement({ inProfile, snapshotsId, snapshotsUrl, releasesId, releasesUrl }: MavenDistributionManagement): void;
    addProfile({ content, ...profile }: MavenProfile): void;
    addPlugin({ inProfile, ...plugin }: MavenPlugin): void;
    addPluginManagement({ inProfile, ...plugin }: MavenPlugin): void;
    addRepository({ inProfile, ...repository }: MavenRepository): void;
    addPluginRepository({ inProfile, ...repository }: MavenRepository): void;
    addAnnotationProcessor({ inProfile, ...artifact }: MavenAnnotationProcessor): void;
    protected getNode({ profile, nodePath }?: {
        profile?: string;
        nodePath?: string;
    }): any;
    protected addDependencyAt(node: any, { additionalContent, ...dependency }: MavenDependency): void;
    protected addPluginAt(node: any, { additionalContent, ...artifact }: MavenPlugin): void;
    protected addRepositoryAt(node: any, { releasesEnabled, snapshotsEnabled, ...repository }: MavenRepository): void;
    protected addPluginRepositoryAt(node: any, { releasesEnabled, snapshotsEnabled, ...repository }: MavenRepository): void;
    protected sort(): void;
}
export declare const createPomStorage: (generator: CoreGenerator, { sortFile }?: {
    sortFile?: boolean;
}) => PomStorage;
