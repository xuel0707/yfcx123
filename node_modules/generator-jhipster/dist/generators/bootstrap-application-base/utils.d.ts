import type BaseApplicationGenerator from '../base-application/generator.js';
export declare const auditableEntityFields: () => ({
    fieldName: string;
    fieldType: string;
    readonly: boolean;
    skipServer: boolean;
    builtIn: boolean;
    fieldValidateRules: string[];
    fieldValidateRulesMaxlength: number;
    autoGenerate: boolean;
} | {
    fieldName: string;
    fieldType: string;
    readonly: boolean;
    skipServer: boolean;
    builtIn: boolean;
    autoGenerate: boolean;
    fieldValidateRules?: undefined;
    fieldValidateRulesMaxlength?: undefined;
})[];
export declare function createUserEntity(this: BaseApplicationGenerator, customUserData: {} | undefined, application: any): {
    name: string;
    builtIn: boolean;
    changelogDate: string;
    entityTableName: string;
    relationships: never[];
    fields: any;
    dto: boolean;
    adminUserDto: string;
    builtInUser: boolean;
    skipClient: any;
    skipDbChangelog: boolean;
    entityDomainLayer: boolean;
    entityPersistenceLayer: boolean;
    entityRestLayer: boolean;
    entitySearchLayer: boolean;
    hasImageField: boolean;
    pagination: string;
    auditableEntity: boolean;
    i18nKeyPrefix: string;
};
export declare function createUserManagementEntity(this: BaseApplicationGenerator, customUserManagementData: {} | undefined, application: any): {
    adminEntity: boolean;
    builtInUser: boolean;
    builtInUserManagement: boolean;
    name: string;
    skipClient: boolean;
    skipServer: boolean;
    changelogDate: string;
    clientRootFolder: string;
    entityAngularName: string;
    entityApiUrl: string;
    entityFileName: string;
    entityPage: string;
    builtIn: boolean;
    entityTableName: string;
    relationships: never[];
    fields: any;
    dto: boolean;
    adminUserDto: string;
    skipDbChangelog: boolean;
    entityDomainLayer: boolean;
    entityPersistenceLayer: boolean;
    entityRestLayer: boolean;
    entitySearchLayer: boolean;
    hasImageField: boolean;
    pagination: string;
    auditableEntity: boolean;
    i18nKeyPrefix: string;
};
export declare function createAuthorityEntity(this: BaseApplicationGenerator, customAuthorityData: {} | undefined, application: any): {
    name: string;
    entitySuffix: string;
    clientRootFolder: string;
    builtIn: boolean;
    changelogDate: string;
    adminEntity: boolean;
    entityTableName: string;
    relationships: never[];
    fields: any;
    builtInAuthority: boolean;
    skipClient: any;
    searchEngine: string;
    service: string;
    dto: string;
    entityR2dbcRepository: boolean;
    skipDbChangelog: boolean;
    entityDomainLayer: any;
    entityPersistenceLayer: any;
    entityRestLayer: any;
};
