export type DatabaseData = {
    name: string;
    protocolSuffix: string;
    jdbcDriver: string;
    hibernateDialect: string;
    port?: string;
    localDirectory?: string;
    extraOptions?: string;
    defaultUsername?: string;
    defaultPassword?: string;
    defaultDatabaseName?: string;
    constraintNameMaxLength?: number;
    tableNameMaxLength?: number;
};
export type getData = (options: {
    prodDatabaseType?: string;
    localDirectory?: string;
    buildDirectory?: string;
    protocolSuffix?: string;
    itests?: boolean;
}) => Partial<DatabaseData>;
export type DatabaseDataSpec = DatabaseData & {
    jdbc?: Partial<DatabaseData>;
    r2dbc?: Partial<DatabaseData>;
    getData?: getData;
};
declare const databaseData: Record<string, DatabaseDataSpec>;
export default databaseData;
export declare function getDatabaseData(databaseType: string): DatabaseDataSpec;
export declare const getDBCExtraOption: (databaseType: any) => string;
