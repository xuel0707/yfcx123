import type BaseGenerator from './base/index.js';
import type { NeedleInsertion } from './base/support/needles.js';
export type NeedleFileModel = {
    /**
     * file path for logging purposes.
     */
    file: string;
    /**
     * needle to be looked for
     */
    needle: string;
    /**
     * content to be added.
     */
    splicable: string | string[];
    path?: string;
    /**
     * apply prettier aware expressions before looking for applied needles.
     */
    prettierAware?: boolean;
    /**
     * use another content to looking for applied needles.
     */
    regexp?: RegExp | string;
    /**
     * file content
     */
    haystack?: string;
};
export default class {
    generator: BaseGenerator;
    constructor(generator: BaseGenerator);
    /**
     * @deprecated
     */
    get clientSrcDir(): string;
    /**
     * @deprecated
     */
    get clientFramework(): string;
    /**
     * @deprecated use editFile
     * @param rewriteFileModel
     * @param errorMessage
     */
    addBlockContentToFile(rewriteFileModel: NeedleFileModel, errorMessage?: string): void;
    editFile(fullPath: any, errorMessage: string, needleData: NeedleInsertion): void;
    logNeedleNotFound(exception: Error, message?: string, fullPath?: string): void;
    /**
     * @deprecated
     */
    generateFileModelWithPath(aPath: string, aFile: string, needleTag: string, ...content: string[]): NeedleFileModel;
    /**
     * @deprecated
     */
    generateFileModel(aFile: string, needleTag: string, ...content: string[]): NeedleFileModel;
}
