import type { WriteFileSection } from '../base/api.js';
export declare const builtInFiles: WriteFileSection;
export declare const angularFiles: {
    model: import("../base/api.js").WriteFileBlock[];
    service: import("../base/api.js").WriteFileBlock[];
    client: import("../base/api.js").WriteFileBlock[];
};
export declare const userManagementFiles: WriteFileSection;
export declare const writeEntitiesFiles: (this: import("../index.js").GeneratorBaseCore, params: import("../../lib/types/application/tasks.js").TaskParamWithEntities<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>, import("../../lib/types/application/application.js").ApplicationType<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>>>) => void;
export declare const postWriteEntitiesFiles: (this: import("../index.js").GeneratorBaseCore, params: import("../../lib/types/application/tasks.js").PostWritingEntitiesTaskParam<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>, import("../../lib/types/application/application.js").ApplicationType<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>>>) => void;
export declare const cleanupEntitiesFiles: (this: import("../index.js").GeneratorBaseCore, params: import("../../lib/types/application/tasks.js").TaskParamWithEntities<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>, import("../../lib/types/application/application.js").ApplicationType<import("../base-application/index.js").Entity<import("../base-application/index.js").Field, never>>>) => void;
